name: "Get all changed files"
description: ""
inputs:
  environment:
    required: true
    description: "Target environment for calling workflow" 
  file-filter:
    required: true
    description: "Filter to limit what files are returned"
outputs:
  added_files:
    value: ${{ steps.check_files.outputs.added_files}}
  modified_files:
    value: ${{ steps.check_files.outputs.modified_files}}
  renamed_files:
    value: ${{ steps.check_files.outputs.renamed_files}}
  all_changed_files:
    value: ${{ steps.check_files.outputs.all_changed_files}}
runs: 
  using: "composite"
  steps:
    - name: Get diff
      id: check_files
      shell: bash
      run: |
        base=$([ "${{ inputs.environment }}" == "dev" ] &&  echo "${{ github.event.pull_request.base.sha }}" || echo "${{ github.event.before }}")
        head=$([ "${{ inputs.environment }}" == "dev" ] &&  echo "${{ github.event.pull_request.head.sha }}" || echo "${{ github.event.after }}")
        file_type_filter=$([ -z "${{ inputs.file-filter }}" ] &&   echo "" || echo ' -- "${{ inputs.file-filter }}"')

        ADDED_FILES=$(git diff --name-only --diff-filter=A $base $head $file_type_filter| paste -sd "," -)
        MODIFIED_FILES=$(git diff --name-only --diff-filter=M $base $head $file_type_filter | paste -sd "," -)
        RENAMED_FILES=$(git diff --name-status --diff-filter=R $base $head $file_type_filter | awk '{print $2 ">" $3}' | paste -sd "," -)
        ALL_CHANGED+=($ADDED_FILES $MODIFIED_FILES)
        ANY_CHANGED=$([ ${#ALL_CHANGED[@]} -eq 0 ] && false || true)

        echo "ADDED: $ADDED_FILES"
        echo "MOD: $MODIFIED_FILES"
        echo "RENAMED: $RENAMED_FILES"

        {
          echo "added_files=$ADDED_FILES"
          echo "modified_files=$MODIFIED_FILES"
          echo "renamed_files=$RENAMED_FILES"
          echo "all_changed_files=$ALL_CHANGED"
          echo "any_changed=$ANY_CHANGED"
        } >> "$GITHUB_OUTPUT"

    - name: List all new/modified/deleted/renamed files
      id: list_files
      shell: bash
      run: |
        IFS=','  
        echo "NEW:"
        for new_file in $(echo "${{ steps.check_files.outputs.added_files }}" | tr -d '"'); do
          if [[ ${#new_file} > 0 ]]; then
            echo "$new_file was added."
          else
            echo "No files added."
          fi
        done
      
        echo "MODIFIED:"
        for mod_file in $(echo "${{ steps.check_files.outputs.modified_files }}" | tr -d '"'); do
          if [[ ${#mod_file} > 0 ]]; then
            echo "$mod_file was modified."
          else
            echo "No files modified."
          fi
        done

        echo "RENAMED:"
        for rename_pair in $(echo "${{ steps.check_files.outputs.renamed_files }}" | tr -d '"'); do
          if [[ ${#rename_pair} > 0 ]]; then
            export old_name="$(echo "$rename_pair" | cut -d '>' -f 1)"
            export new_name="$(echo "$rename_pair" | cut -d '>' -f 2)"
            echo "$old_name was renamed to $new_name."
          else
            echo "No files renamed."
          fi
        done

        echo "DELETED:"
        for del_file in $(echo "${{ steps.check_files.outputs.deleted_files }}" | tr -d '"'); do
          if [[ ${#del_file} > 0 ]]; then
            echo "$del_file was deleted."
          else
            echo "No files deleted."
          fi
        done

        echo "ALL_CHANGED:"
        echo "${{ steps.check_files.outputs.all_changed_files"

